package whatisnewin.javax.lang.model.util;

import javax.lang.model.util.ElementKindVisitor14;
import javax.lang.model.element.RecordComponentElement;
import javax.lang.model.element.TypeElement;
import javax.lang.model.element.VariableElement;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link ElementKindVisitor14}
 * that were newly introduced in Java version 14.<br>
 *
 * {@link ElementKindVisitor14} is a completely new class.
 * @since 14
 * @see ElementKindVisitor14
 */
public final class WhatIsNewInElementKindVisitor14<R, P>
{
  /**
   * Example call to new method {@link ElementKindVisitor14#visitRecordComponent(RecordComponentElement, Object)}.
   * @since 14
   * @see ElementKindVisitor14#visitRecordComponent(RecordComponentElement, Object)
   */
  public R visitRecordComponent(RecordComponentElement e, P p)
  {
    ElementKindVisitor14<R, P> testee = $$$();

    R result = testee.visitRecordComponent(e, p);
    return result;
  }

  /**
   * Example call to new method {@link ElementKindVisitor14#visitTypeAsRecord(TypeElement, Object)}.
   * @since 14
   * @see ElementKindVisitor14#visitTypeAsRecord(TypeElement, Object)
   */
  public R visitTypeAsRecord(TypeElement e, P p)
  {
    ElementKindVisitor14<R, P> testee = $$$();

    R result = testee.visitTypeAsRecord(e, p);
    return result;
  }

  /**
   * Example call to new method {@link ElementKindVisitor14#visitVariableAsBindingVariable(VariableElement, Object)}.
   * @since 14
   * @see ElementKindVisitor14#visitVariableAsBindingVariable(VariableElement, Object)
   */
  public R visitVariableAsBindingVariable(VariableElement e, P p)
  {
    ElementKindVisitor14<R, P> testee = $$$();

    R result = testee.visitVariableAsBindingVariable(e, p);
    return result;
  }

  private ElementKindVisitor14<R, P> $$$()
  {
    return null;
  }
}
